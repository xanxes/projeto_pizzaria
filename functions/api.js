!function(e,a){for(var t in a)e[t]=a[t]}(exports,function(e){var a={};function t(s){if(a[s])return a[s].exports;var n=a[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,t),n.l=!0,n.exports}return t.m=e,t.c=a,t.d=function(e,a,s){t.o(e,a)||Object.defineProperty(e,a,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,a){if(1&a&&(e=t(e)),8&a)return e;if(4&a&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&a&&"string"!=typeof e)for(var n in e)t.d(s,n,function(a){return e[a]}.bind(null,n));return s},t.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(a,"a",a),a},t.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},t.p="",t(t.s=22)}([function(e,a){e.exports=require("@prisma/client")},function(e,a,t){const{MESSAGE_ERROR:s,MESSAGE_SUCCESS:n}=t(2),i=t(20);e.exports={listarPizzaTipos:async()=>{const e=await i.listarPizzaTipos();return e?{code:200,message:e}:{code:404,message:s.NOT_FOUND_DB}},listarPizzaComTipo:async e=>{if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};const a=await i.listarPizzaComTipo(e);return!1===a?{code:404,message:s.NOT_FOUND_DB}:{code:200,message:a}},novaPizzaTipo:async e=>{if(""==e||null==e)return{code:400,message:s.REQUIRED_FIELDS};return await i.novaPizzaTipo(e)?{code:201,message:n.INSERT_ITEM}:{code:500,message:s.INTERNAL_ERROR_DB}},buscarPizzaTipos:async e=>{if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};const a=await i.buscarPizzaTipos(e);return!1===a?{code:404,message:s.NOT_FOUND_DB}:{code:200,message:a}},deletePizzaTipos:async e=>{if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};return await i.deletePizzaTipos(e)?{code:200,message:n.DELETE_ITEM}:{code:400,message:s.INTERNAL_ERROR_DB}},updatePizzaTipos:async({id:e,tipo:a})=>{if(""==e||null==e||""==a||null==a)return{status:400,message:s.REQUIRED_ID};return await i.updatePizzaTipos({id:e,tipo:a})?{code:200,message:n.UPDATE_ITEM}:{code:400,message:s.INTERNAL_ERROR_DB}},listarBebidaTipos:async()=>{const e=await i.listarBebidaTipos();return e?{code:200,message:e}:{code:404,message:s.NOT_FOUND_DB}},listarBebidaComTipo:async e=>{if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};const a=await i.listarBebidasComTipo(e);return!1===a?{code:404,message:s.NOT_FOUND_DB}:{code:200,message:a}},novaBebidaTipo:async e=>{if(""==e||null==e)return{code:400,message:s.REQUIRED_FIELDS};return await i.novaBebidaTipo(e)?{code:201,message:n.INSERT_ITEM}:{code:500,message:s.INTERNAL_ERROR_DB}},buscarBebidaTipos:async e=>{if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};const a=await i.buscarBebidaTipos(e);return!1===a?{code:404,message:s.NOT_FOUND_DB}:{code:200,message:a}},deleteBebidaTipos:async e=>{if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};return await i.deleteBebidaTipos(e)?{code:200,message:n.DELETE_ITEM}:{code:400,message:s.INTERNAL_ERROR_DB}},updateBebidaTipos:async({id:e,tipo:a})=>{if(""==e||null==e||""==a||null==a)return{status:400,message:s.REQUIRED_ID};return await i.updateBebidaTipos({id:e,tipo:a})?{code:200,message:n.UPDATE_ITEM}:{code:400,message:s.INTERNAL_ERROR_DB}}}},function(e,a){e.exports={MESSAGE_ERROR:{REQUIRED_FIELDS:"Existe campos obrigatório(s) que deve(m) ser enviado(s)!",INVALID_EMAIL:"O e-mail informado não é válido!",CONTENT_TYPE:"O cabeçalho da requisição não possui um content-type válido",EMPTY_BODY:"O body da requisição deve haver conteúdo",NOT_FOUND_DB:"Não foram encontrados registros no banco de dados",INTERNAL_ERROR_DB:"Não foi possível realizar a operação com o Banco de Dados",REQUIRED_ID:"O ID do registro é obrigatório neste tipo de requisição"},MESSAGE_SUCCESS:{INSERT_ITEM:"Item criado com sucesso no banco de dados",UPDATE_ITEM:"Item atualizado com sucesso no banco de dados",DELETE_ITEM:"Item deletado com sucesso no banco de dados"}}},function(e,a,t){const{MESSAGE_ERROR:s,MESSAGE_SUCCESS:n}=t(2),i=t(17),o=t(18),r=t(19);e.exports={listarFuncionarios:async()=>{const e=await r.listarFuncionarios();return e?{code:200,message:e}:{code:404,message:s.NOT_FOUND_DB}},buscarFuncionario:async e=>{if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};const a=await r.buscarFuncionario(e);return a?{code:200,message:a}:{code:404,message:s.NOT_FOUND_DB}},novoFuncionario:async({nome:e,rg:a,cpf:t,telefone:o,email:c,senha:u})=>{if(""==e||null==e||""==a||null==a||""==t||null==t||""==o||null==o||""==c||null==c||""==u||null==u)return{code:400,message:s.REQUIRED_FIELDS};const l=await i.hash(u,8);return await r.novoFuncionario({nome:e,rg:a,cpf:t,telefone:o,email:c,senha:l})?{code:201,message:n.INSERT_ITEM}:{code:500,message:s.INTERNAL_ERROR_DB}},deleteFuncionario:async e=>{if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};return await r.deleteFuncionario(e)?{code:200,message:n.DELETE_ITEM}:{code:404,message:s.NOT_FOUND_DB}},updateFuncionario:async({id:e,nome:a,rg:t,cpf:o,telefone:c,email:u,senha:l})=>{if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};if(""==a||null==a||""==t||null==t||""==o||null==o||""==c||null==c||""==u||null==u||""==l||null==l)return{code:400,message:s.REQUIRED_FIELDS};const d=await i.hash(l,8);return await r.updateFuncionario({id:e,nome:a,rg:t,cpf:o,telefone:c,email:u,senha:d})?{code:200,message:n.UPDATE_ITEM}:{code:404,message:s.NOT_FOUND_DB}},login:async({email:e,senha:a})=>{if(""==e||null==e||""==a||null==a)return{code:400,message:s.REQUIRED_FIELDS};const t=await r.buscarPeloEmail(e);if(!1===t)return{code:404,message:s.NOT_FOUND_DB};if(!1===await i.compare(a,t[0].senha))return{code:401,message:"Senha incorreta não autorizado!"};return{code:200,message:o.sign({data:t},"tokenSecreto")}}}},function(e,a,t){e.exports={insertPizza:async function(e){try{const{PrismaClient:a}=t(0),s=new a;let n=`insert into tbl_pizza (nome, preco, imagem, descricao, desconto) values('${e.nome}', '${e.preco}', '${e.imagem}', '${e.descricao}',\n     '${e.desconto}')`;return!!await s.$executeRawUnsafe(n)}catch(e){return!1}},selectAllPizzas:async function(){const{PrismaClient:e}=t(0),a=new e,s=await(a.$queryRaw`select id, nome, preco, imagem, descricao, desconto from tbl_pizza order by id desc`);return s.length>0&&s},updatePizza:async function(e){try{const{PrismaClient:a}=t(0),s=new a;let n=`update tbl_pizza set nome = '${e.nome}', preco = '${e.preco}', imagem = '${e.imagem}',\n        descricao = '${e.descricao}', desconto = '${e.desconto}' where id = '${e.id}'`;console.log(n);return!!await s.$executeRawUnsafe(n)}catch(e){return!1}},deletePizza:async function(e){try{const{PrismaClient:a}=t(0),s=new a;let n=`delete from tbl_pizza where id = '${e}'`;return!!await s.$executeRawUnsafe(n)}catch(e){return!1}},selectByIdPizza:async function(e){const{PrismaClient:a}=t(0),s=new a;let n="select cast(id as float) as id,\n                    id,\n                    nome, \n                    preco,\n                    imagem, \n                    descricao, \n                    desconto\n                from tbl_pizza \n                where id = "+e;const i=await s.$queryRawUnsafe(n);return i.length>0&&i}}},function(e,a,t){e.exports={selectAllBebidas:async function(){const{PrismaClient:e}=t(0),a=new e,s=await(a.$queryRaw`select * from tbl_bebida order by id desc`);return s.length>0&&s},insertBebida:async function(e){try{const{PrismaClient:a}=t(0),s=new a;let n=`insert into tbl_bebida (nome, preco, imagem, descricao, desconto) values('${e.nome}', '${e.preco}', '${e.imagem}', '${e.descricao}',\n     '${e.desconto}')`;return!!await s.$executeRawUnsafe(n)}catch(e){return!1}},updateBebida:async function(e){try{const{PrismaClient:a}=t(0),s=new a;let n=`update tbl_bebida set nome = '${e.nome}', preco = '${e.preco}', imagem = '${e.imagem}',\n        descricao = '${e.descricao}', desconto = '${e.desconto}' where id = '${e.id}'`;return!!await s.$executeRawUnsafe(n)}catch(e){return!1}},deleteBebida:async function(e){try{const{PrismaClient:a}=t(0),s=new a;let n=`delete from tbl_bebida where id = '${e}'`;return!!await s.$executeRawUnsafe(n)}catch(e){return!1}},selectByIdBebida:async function(e){const{PrismaClient:a}=t(0),s=new a;let n="select cast(id as float) as id,\n                    id,\n                    nome, \n                    preco,\n                    imagem, \n                    descricao, \n                    desconto\n                from tbl_bebida \n                where id = "+e;const i=await s.$queryRawUnsafe(n);return i.length>0&&i}}},function(e,a,t){e.exports={selectAllCategorias:async function(){const{PrismaClient:e}=t(0),a=new e,s=await(a.$queryRaw`select * from tbl_categoria order by id desc`);return s.length>0&&s},insertCategoria:async function(e){try{const{PrismaClient:a}=t(0),s=new a;let n=`insert into tbl_categoria (categoria) values('${e.categoria}')`;return!!await s.$executeRawUnsafe(n)}catch(e){return!1}},updateCategoria:async function(e){try{const{PrismaClient:a}=t(0),s=new a;let n=`update tbl_categoria set categoria = '${e.categoria}' where id = '${e.id}'`;return!!await s.$executeRawUnsafe(n)}catch(e){return!1}},deleteCategoria:async function(e){try{const{PrismaClient:a}=t(0),s=new a;let n=`delete from tbl_categoria where id = '${e}'`;return!!await s.$executeRawUnsafe(n)}catch(e){return!1}},selectByIdCategoria:async function(e){const{PrismaClient:a}=t(0),s=new a;let n="select cast(id as float) as id,\n                    id,\n                    categoria\n                from tbl_categoria \n                where id = "+e;const i=await s.$queryRawUnsafe(n);return i.length>0&&i}}},function(e,a,t){const s=t(21),{MESSAGE_ERROR:n,MESSAGE_SUCCESS:i}=t(2),{listarFuncionarios:o}=t(3);e.exports={insertMensagem:async({nome:e,email:a,tipo_mensagem:t,mensagem:o,telefone:r,celular:c})=>{if(""==e||null==e||""==a||null==a||""==t||null==t||""==o||null==o||""==r||null==r||""==c||null==c)return{code:400,message:n.REQUIRED_FIELDS};return await s.insertMensagem({nome:e,email:a,tipo_mensagem:t,mensagem:o,telefone:r,celular:c})?{code:201,message:i.INSERT_ITEM}:{code:500,message:n.INTERNAL_ERROR_DB}},updateMensagem:async({id:e,nome:a,email:t,tipo_mensagem:o,mensagem:r,telefone:c,celular:u})=>{if(""==e||null==e)return{code:400,message:n.REQUIRED_ID};if(""==a||null==a||""==t||null==t||""==o||null==o||""==r||null==r||""==c||null==c||""==u||null==u)return{code:400,message:n.REQUIRED_FIELDS};return await s.updateMensagem({id:e,nome:a,email:t,tipo_mensagem:o,mensagem:r,telefone:c,celular:u})?{code:201,message:i.UPDATE_ITEM}:{code:500,message:n.INTERNAL_ERROR_DB}},deleteMensagem:async e=>{if(""==e||null==e)return{code:400,message:n.REQUIRED_ID};return await s.deleteMensagem(e)?{code:201,message:i.DELETE_ITEM}:{code:500,message:n.INTERNAL_ERROR_DB}},buscarMensagem:async e=>{if(""==e||null==e)return{code:400,message:n.REQUIRED_ID};const a=await s.buscarMensagem(e);return a?{code:200,message:a}:{code:404,message:n.NOT_FOUND_DB}},listarMensagem:async()=>{const e=await s.listarMensagem();return e?{code:200,message:e}:{code:404,message:n.NOT_FOUND_DB}}}},function(e,a){e.exports=require("express")},function(e,a,t){const{MESSAGE_ERROR:s,MESSAGE_SUCCESS:n}=t(2),i=async function(e){let a={};if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};{const{selectByIdPizza:s}=t(4),n=await s(e);return!!n&&(a.pizza=n,a)}};e.exports={novaPizza:async function(e){if(""==e.nome||null==e.nome||""==e.preco||null==e.preco||""==e.imagem||null==e.imagem||""==e.descricao||null==e.descricao)return{status:400,message:s.REQUIRED_FIELDS};{const a=t(4);return await a.insertPizza(e)?{status:201,message:n.INSERT_ITEM}:{status:500,message:s.INTERNAL_ERROR_DB}}},listarPizzas:async function(){let e={};const{selectAllPizzas:a}=t(4),s=await a();return!!s&&(e.pizzas=s,e)},atualizaPizza:async function(e){if(""==e.id||null==e.id)return{status:400,message:s.REQUIRED_ID};if(""==e.nome||null==e.nome||""==e.preco||null==e.preco)return{status:400,message:s.REQUIRED_FIELDS};{const a=t(4);return await a.updatePizza(e)?{status:200,message:n.UPDATE_ITEM}:{status:500,message:s.INTERNAL_ERROR_DB}}},excluirPizza:async function(e){if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};if(await i(e)){const a=t(4);return await a.deletePizza(e)?{status:200,message:n.DELETE_ITEM}:{status:500,message:s.INTERNAL_ERROR_DB}}return{status:404,message:s.NOT_FOUND_DB}},buscarPizza:i}},function(e,a,t){const{MESSAGE_ERROR:s,MESSAGE_SUCCESS:n}=t(2),i=async function(e){if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};if(await o(e)){const a=t(5);return await a.deleteBebida(e)?{status:200,message:n.DELETE_ITEM}:{status:500,message:s.INTERNAL_ERROR_DB}}return{status:404,message:s.NOT_FOUND_DB}},o=async function(e){let a={};if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};{const{selectByIdBebida:s}=t(5),n=await s(e);return!!n&&(a.bebida=n,a)}};e.exports={listarBebidas:async function(){let e={};const{selectAllBebidas:a}=t(5),s=await a();return!!s&&(e.bebidas=s,e)},novaBebida:async function(e){if(""==e.nome||null==e.nome||""==e.preco||null==e.preco||""==e.imagem||null==e.imagem||""==e.descricao||null==e.descricao)return{status:400,message:s.REQUIRED_FIELDS};{const a=t(5);return await a.insertBebida(e)?{status:201,message:n.INSERT_ITEM}:{status:500,message:s.INTERNAL_ERROR_DB}}},excluirBebida:i,atualizaBebida:async function(e){if(""==e.id||null==e.id)return{status:400,message:s.REQUIRED_ID};if(""==e.nome||null==e.nome||""==e.preco||null==e.preco)return{status:400,message:s.REQUIRED_FIELDS};{const a=t(5);return await a.updateBebida(e)?{status:200,message:n.UPDATE_ITEM}:{status:500,message:s.INTERNAL_ERROR_DB}}},excluirBebida:i,buscarBebida:o}},function(e,a,t){const{MESSAGE_ERROR:s,MESSAGE_SUCCESS:n}=t(2),i=async function(e){let a={};if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};{const{selectByIdCategoria:s}=t(6),n=await s(e);return!!n&&(a.categoria=n,a)}};e.exports={novaCategoria:async function(e){if(""==e.categoria||null==e.categoria)return{status:400,message:s.REQUIRED_FIELDS};{const a=t(6);return await a.insertCategoria(e)?{status:201,message:n.INSERT_ITEM}:{status:500,message:s.INTERNAL_ERROR_DB}}},listarCategorias:async function(){let e={};const{selectAllCategorias:a}=t(6),s=await a();return!!s&&(e.categorias=s,e)},atualizaCategoria:async function(e){if(""==e.id||null==e.id)return{status:400,message:s.REQUIRED_ID};if(""==e.categoria||null==e.categoria)return{status:400,message:s.REQUIRED_FIELDS};{const a=t(6);return await a.updateCategoria(e)?{status:200,message:n.UPDATE_ITEM}:{status:500,message:s.INTERNAL_ERROR_DB}}},buscarCategoria:i,excluirCategoria:async function(e){if(""==e||null==e)return{status:400,message:s.REQUIRED_ID};if(await i(e)){const a=t(6);return await a.deleteCategoria(e)?{status:200,message:n.DELETE_ITEM}:{status:500,message:s.INTERNAL_ERROR_DB}}return{status:404,message:s.NOT_FOUND_DB}}}},function(e,a){e.exports=require("express/lib/request")},function(e,a,t){const{Router:s}=t(8),n=t(8),i=t(14),o=t(15),{request:r}=t(8),{response:c}=t(8),{header:u}=t(12),{checkLogin:l}=(t(12),t(16)),{MESSAGE_ERROR:d,MESSAGE_SUCCESS:m}=t(2),E=n(),g=s();g.use((e,a,t)=>{a.header("Access-Control-Allow-Origin","*"),a.header("Access-Control-Allow-Methods","GET, POST, PUT, DELETE, OPTIONS"),E.use(o()),t()});const p=i.json();g.post("/v1/pizza",o(),p,(async function(e,a){let s,n,i;if(i=e.headers["content-type"],"application/json"==i){let a=e.body;if("{}"!=JSON.stringify(a)){const e=t(9),i=await e.novaPizza(a);s=i.status,n=i.message}else s=400,n=d.EMPTY_BODY}else s=415,n=d.CONTENT_TYPE;a.status(s),a.json(n)})),g.get("/v1/pizzas",o(),(async function(e,a){let s,n;const i=t(9),o=await i.listarPizzas();o?(s=200,n=o):(s=404,n=d.NOT_FOUND_DB),a.status(s),a.json(n)})),g.put("/v1/pizza/:id",o(),p,(async function(e,a){let s,n,i;if(i=e.headers["content-type"],"application/json"==i){let a=e.body;if("{}"!=JSON.stringify(a)){let i=e.params.id;if(""!=i&&null!=i){a.id=i;const e=t(9),o=await e.atualizaPizza(a);s=o.status,n=o.message}else s=400,n=d.REQUIRED_ID}else s=400,n=d.EMPTY_BODY}else s=415,n=d.CONTENT_TYPE;a.status(s),a.json(n)})),g.delete("/v1/pizza/:id",o(),p,(async function(e,a){let s,n,i=e.params.id;if(""!==i&&void 0!==i){const e=t(9),a=await e.excluirPizza(i);s=a.status,n=a.message}else s=400,n=d.REQUIRED_ID;a.status(s),a.json(n)})),g.get("/v1/bebidas",o(),(async function(e,a){let s,n;const i=t(10),o=await i.listarBebidas();o?(s=200,n=o):(s=404,n=d.NOT_FOUND_DB),a.status(s),a.json(n)})),g.post("/v1/bebida",o(),p,(async function(e,a){let s,n,i;if(i=e.headers["content-type"],"application/json"==i){let a=e.body;if("{}"!=JSON.stringify(a)){const e=t(10),i=await e.novaBebida(a);s=i.status,n=i.message}else s=400,n=d.EMPTY_BODY}else s=415,n=d.CONTENT_TYPE;a.status(s),a.json(n)})),g.put("/v1/bebida/:id",o(),p,(async function(e,a){let s,n,i;if(i=e.headers["content-type"],"application/json"==i){let a=e.body;if("{}"!=JSON.stringify(a)){let i=e.params.id;if(""!=i&&null!=i){a.id=i;const e=t(10),o=await e.atualizaBebida(a);s=o.status,n=o.message}else s=400,n=d.REQUIRED_ID}else s=400,n=d.EMPTY_BODY}else s=415,n=d.CONTENT_TYPE;a.status(s),a.json(n)})),g.delete("/v1/bebida/:id",o(),p,(async function(e,a){let s,n,i=e.params.id;if(""!==i&&void 0!==i){const e=t(10),a=await e.excluirBebida(i);s=a.status,n=a.message}else s=400,n=d.REQUIRED_ID;a.status(s),a.json(n)})),g.get("/v1/categorias",o(),(async function(e,a){let s,n;const i=t(11),o=await i.listarCategorias();o?(s=200,n=o):(s=404,n=d.NOT_FOUND_DB),a.status(s),a.json(n)})),g.post("/v1/categoria",o(),p,(async function(e,a){let s,n,i;if(i=e.headers["content-type"],"application/json"==i){let a=e.body;if("{}"!=JSON.stringify(a)){const e=t(11),i=await e.novaCategoria(a);s=i.status,n=i.message}else s=400,n=d.EMPTY_BODY}else s=415,n=d.CONTENT_TYPE;a.status(s),a.json(n)})),g.put("/v1/categoria/:id",o(),p,(async function(e,a){let s,n,i;if(i=e.headers["content-type"],"application/json"==i){let a=e.body;if("{}"!=JSON.stringify(a)){let i=e.params.id;if(""!=i&&null!=i){a.id=i;const e=t(11),o=await e.atualizaCategoria(a);s=o.status,n=o.message}else s=400,n=d.REQUIRED_ID}else s=400,n=d.EMPTY_BODY}else s=415,n=d.CONTENT_TYPE;a.status(s),a.json(n)})),g.delete("/v1/categoria/:id",o(),p,(async function(e,a){let s,n,i=e.params.id;if(""!==i&&void 0!==i){const e=t(11),a=await e.excluirCategoria(i);s=a.status,n=a.message}else s=400,n=d.REQUIRED_ID;a.status(s),a.json(n)})),g.get("/v1/funcionario/",o(),async(e,a)=>{const s=t(3),n=await s.listarFuncionarios();a.status(n.code),a.json(n.message)}),g.get("/v1/funcionario/:id",o(),async(e,a)=>{const s=t(3),n=await s.buscarFuncionario(e.params.id);a.status(n.code),a.json(n.message)}),g.post("/v1/funcionario/",o(),p,async(e,a)=>{const s=t(3),n=await s.novoFuncionario(e.body);a.status(n.code),a.json(n.message)}),g.post("/v1/funcionario/login",o(),p,async(e,a)=>{const s=t(3),n=await s.login(e.body);a.status(n.code),a.json(n.message)}),g.delete("/v1/funcionario/:id",o(),async(e,a)=>{const s=t(3),n=await s.deleteFuncionario(e.params.id);a.status(n.code),a.json(n.message)}),g.put("/v1/funcionario/:id",o(),p,async(e,a)=>{const s=t(3),n={id:e.params.id,nome:e.body.nome,rg:e.body.rg,cpf:e.body.cpf,telefone:e.body.telefone,email:e.body.email,senha:e.body.senha},i=await s.updateFuncionario(n);a.status(i.code),a.json(i.message)}),g.get("/v1/tipos/pizza",o(),async(e,a)=>{const s=t(1),n=await s.listarPizzaTipos();a.status(n.code),a.json(n.message)}),g.get("/v1/tipos/pizza/listar/:id",o(),async(e,a)=>{const s=t(1),n=await s.listarPizzaComTipo(e.params.id);a.status(n.code),a.json(n.message)}),g.get("/v1/tipos/pizza/:id",o(),async(e,a)=>{const s=t(1),n=await s.buscarPizzaTipos(e.params.id);a.status(n.code),a.json(n.message)}),g.post("/v1/tipos/pizza",o(),p,async(e,a)=>{const s=t(1),n=e.body.tipo,i=await s.novaPizzaTipo(n);a.status(i.code),a.json(i.message)}),g.put("/v1/tipos/pizza/:id",o(),p,async(e,a)=>{const s=t(1),n=e.body.tipo,i=await s.updatePizzaTipos({tipo:n,id:e.params.id});a.status(i.code),a.json(i.message)}),g.delete("/v1/tipos/pizza/:id",o(),async(e,a)=>{const s=t(1),n=await s.deletePizzaTipos(e.params.id);a.status(n.code),a.json(n.message)}),g.get("/v1/tipos/bebida",o(),async(e,a)=>{const s=t(1),n=await s.listarBebidaTipos();a.status(n.code),a.json(n.message)}),g.get("/v1/tipos/bebida/listar/:id",o(),async(e,a)=>{const s=t(1),n=await s.listarBebidaComTipo(e.params.id);a.status(n.code),a.json(n.message)}),g.get("/v1/tipos/bebida/:id",o(),async(e,a)=>{const s=t(1),n=await s.buscarBebidaTipos(e.params.id);a.status(n.code),a.json(n.message)}),g.post("/v1/tipos/bebida",o(),p,async(e,a)=>{const s=t(1),n=e.body.tipo,i=await s.novaBebidaTipo(n);a.status(i.code),a.json(i.message)}),g.put("/v1/tipos/bebida/:id",o(),p,async(e,a)=>{const s=t(1),n=e.body.tipo,i=await s.updateBebidaTipos({tipo:n,id:e.params.id});a.status(i.code),a.json(i.message)}),g.delete("/v1/tipos/bebida/:id",o(),async(e,a)=>{const s=t(1),n=await s.deleteBebidaTipos(e.params.id);a.status(n.code),a.json(n.message)}),g.get("/v1/mensagem/",o(),async(e,a)=>{const s=t(7),n=await s.listarMensagem();a.status(n.code),a.json(n.message)}),g.get("/v1/mensagem/:id",o(),async(e,a)=>{const s=t(7),n=await s.buscarMensagem(e.params.id);a.status(n.code),a.json(n.message)}),g.post("/v1/mensagem/",o(),p,async(e,a)=>{const s=t(7),n=e.body,i=await s.insertMensagem(n);a.status(i.code),a.json(i.message)}),g.put("/v1/mensagem/:id",o(),p,async(e,a)=>{const s=t(7),n={id:e.params.id,nome:e.body.nome,email:e.body.email,tipo_mensagem:e.body.tipo_mensagem,mensagem:e.body.mensagem,telefone:e.body.telefone,celular:e.body.celular},i=await s.updateMensagem(n);a.status(i.code),a.json(i.message)}),g.delete("/v1/mensagem/:id",o(),l,async(e,a)=>{const s=t(7),n=await s.deleteMensagem(e.params.id);a.status(n.code),a.json(n.message)}),E.use("/.netlify/functions/api",g),e.exports=E},function(e,a){e.exports=require("body-parser")},function(e,a){e.exports=require("cors")},function(e,a){e.exports={checkLogin:async(e,a)=>{const{authorization:t}=e.headers;if(!t)return a.status(401).json("Login é necessario");const[,s]=t.split(" "),n=jwt.verify(s,"tokenSecreto"),{data:i}=n;return e.user=i,next()}}},function(e,a){e.exports=require("bcryptjs")},function(e,a){e.exports=require("jsonwebtoken")},function(e,a,t){const{PrismaClient:s}=t(0),n=new s;e.exports={listarFuncionarios:async()=>{const e=await(n.$queryRaw`SELECT * FROM tbl_funcionario`);return 0!==e.length&&e},buscarFuncionario:async e=>{const a=await(n.$queryRaw`SELECT * FROM tbl_funcionario WHERE  id = ${e}`);return 0!==a.length&&a},novoFuncionario:async({nome:e,rg:a,cpf:t,telefone:s,email:i,senha:o})=>{const r=`INSERT INTO tbl_funcionario (nome, rg, cpf, telefone, email, senha) VALUES ('${e}', '${a}','${t}', '${s}','${i}', '${o}')`;return!!await n.$executeRawUnsafe(r)},buscarPeloEmail:async e=>{const a=await(n.$queryRaw`SELECT *  FROM tbl_funcionario WHERE email = ${e}`);return 0!==a.length&&a},deleteFuncionario:async e=>{const a="DELETE FROM tbl_funcionario WHERE id = "+e;return!!await n.$executeRawUnsafe(a)},updateFuncionario:async({id:e,nome:a,rg:t,cpf:s,telefone:i,email:o,senha:r})=>{const c=`UPDATE tbl_funcionario set nome = '${a}', rg = '${t}', \n                cpf = '${s}', telefone = '${i}', \n                email = '${o}', senha = '${r}' WHERE id = ${e}`;if(await n.$executeRawUnsafe(c))return!0}}},function(e,a,t){const{PrismaClient:s}=t(0),n=t(4),i=t(5),o=new s,r=async()=>{const e=await(o.$queryRaw`SELECT * FROM tbl_tipo_pizza`);return 0!==e.length&&e};e.exports={novaPizzaTipo:async e=>{const a=`INSERT INTO tbl_tipo_pizza (tipo) VALUES('${e}')`;return!!await o.$executeRawUnsafe(a)},novaBebidaTipo:async e=>{const a=`INSERT INTO tbl_tipo_bebida (tipo) VALUES('${e}')`;return!!await o.$executeRawUnsafe(a)},listarBebidaTipos:async()=>{const e=await(o.$queryRaw`SELECT * FROM tbl_tipo_bebida`);return 0!==e.length&&e},buscarBebidaTipos:async e=>{const a=await(o.$queryRaw`SELECT * FROM tbl_tipo_bebida WHERE id = ${e}`);return 0!==a.length&&a},deleteBebidaTipos:async e=>{const a=await r();await Promise.all(a.map(async({id:e})=>{await i.deleteBebida(e)}));return!!await(o.$queryRaw`DELETE FROM tbl_tipo_bebida WHERE id = ${e}`)},updateBebidaTipos:async({id:e,tipo:a})=>{const t=`UPDATE tbl_tipo_bebida set tipo = '${a}' WHERE id = ${e}`;return!!await o.$executeRawUnsafe(t)},updatePizzaTipos:async({id:e,tipo:a})=>{const t=`UPDATE  tbl_tipo_pizza set tipo = '${a}' WHERE id = ${e}`;return!!await o.$executeRawUnsafe(t)},deletePizzaTipos:async e=>{const a=await r();await Promise.all(a.map(async({id:e})=>{await n.deletePizza(e)}));return!!await(o.$queryRaw`DELETE FROM tbl_tipo_pizza WHERE id = ${e}`)},buscarPizzaTipos:async e=>{const a=await(o.$queryRaw`SELECT * FROM tbl_tipo_pizza WHERE id = ${e}`);return 0!==a.length&&a},listarPizzaComTipo:async e=>{const a=await(o.$queryRaw`SELECT
    tbl_pizza.id as pizzaId,
    tbl_pizza.nome,
    tbl_pizza.preco,
    tbl_pizza.desconto,
    tbl_pizza.descricao,
    tbl_pizza.imagem,
    tbl_categoria.categoria as nomeCategoria
FROM tbl_tipo_pizza
    INNER JOIN tbl_pizza on tbl_pizza.id_tipo_pizza = tbl_tipo_pizza.id
    INNER JOIN tbl_categoria on tbl_categoria.id = tbl_pizza.id_categoria
WHERE tbl_tipo_pizza.id = 1;`);return 0!==a.length&&a},listarBebidasComTipo:async e=>{const a=await(o.$queryRaw`SELECT
    tbl_bebida.id as bebidaId,
    tbl_bebida.nome,
    tbl_bebida.preco,
    tbl_bebida.desconto,
    tbl_bebida.descricao,
    tbl_bebida.imagem,
    tbl_fabricante.nome as nomeFabricante,
    tbl_categoria.categoria as nomeCategoria
FROM tbl_tipo_bebida
    INNER JOIN tbl_bebida on tbl_bebida.id_tipo_bebida = tbl_tipo_bebida.id
    INNER JOIN tbl_fabricante on tbl_fabricante.id = tbl_bebida.id_fabricante
    INNER JOIN tbl_categoria on tbl_categoria.id = tbl_bebida.id_categoria
WHERE tbl_tipo_bebida.id = ${e};`);return 0!==a.length&&a},listarPizzaTipos:r}},function(e,a,t){const{PrismaClient:s}=t(0),n=new s;e.exports={listarMensagem:async()=>{const e=await(n.$queryRaw`SELECT * FROM tbl_cliente_contato`);return 0!==e.length&&e},buscarMensagem:async e=>{const a=await(n.$queryRaw`SELECT * FROM tbl_cliente_contato where id = ${e}`);return 0!==a.length&&a},insertMensagem:async({nome:e,email:a,tipo_mensagem:t,mensagem:s,telefone:i,celular:o})=>{const r=`INSERT INTO tbl_cliente_contato (nome,\n        email,\n        tipo_mensagem,\n        mensagem,\n        telefone,\n        celular) VALUES ('${e}', '${a}', ${t}, '${s}', '${i}', '${o}')`;return!!await n.$executeRawUnsafe(r)},updateMensagem:async({id:e,nome:a,email:t,tipo_mensagem:s,mensagem:i,telefone:o,celular:r})=>{const c=`UPDATE tbl_cliente_contato \n  set nome = '${a}',\n    email = '${t}',\n    tipo_mensagem = ${s},\n    mensagem = '${i}',\n    telefone = '${o}',\n    celular = '${r}'\n    WHERE id = ${e}`;return!!await n.$executeRawUnsafe(c)},deleteMensagem:async e=>{const a="DELETE from tbl_cliente_contato where id = "+e;return!!await n.$executeRawUnsafe(a)}}},function(e,a,t){const s=t(23),n=t(13);a.handler=s(n)},function(e,a){e.exports=require("serverless-http")}]));